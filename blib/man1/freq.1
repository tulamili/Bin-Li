.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.16)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\" ========================================================================
.\"
.IX Title "FREQ 1"
.TH FREQ 1 "2021-05-25" "perl v5.14.4" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
コマンド
.PP
.Vb 3
\&  $0 datafile 
\&  $0 < datafile 
\&  cat datafile | $0
.Ve
.PP
オプションに関して
.PP
.Vb 1
\& [入力に関係するオプション]
\& 
\&  \-= : 先頭行をヘッダ(列名の並びなどでありデータでは無い)と見なして処理
\&  \-@ num : 入力ファイルを読む際に、何行毎に標準エラー出力に報告を出すか。未指定なら1000万行毎。
\&  \-l ファイル名 : 個数を数える文字列の対象を含んだファイル名を指定する。出力順序がファイルの各行に記載の順序になる。
\&  \-l は、プロセス置換 <( ) を使うと便利。; \-l により、メモリを節約できる。; \-l と \-@ が共にあると、見つかった行数しかざたない。
\&
\& [出力のオプション]
\&
\&  \-f : 出現数で整列する  \-fr なら逆順にする
\&  \-k : キー文字列で整列する  \-kr なら逆順にする
\&  \-n : キー文字列を数と見なして整列する  \-nr なら逆順にする
\&  \-r : 上記を逆順にする。
\&  \-y 数値範囲 : 頻度が指定回数のもののみ出力。例 \-y 1..3 なら3以下。 3.. なら3以上。2,4,6..8 なら2と4と6,7,8。
\&
\&  \-a : 累和を出力 (accumulative sum)
\&  \-% : データ件数全体に対する割合を出力
\&  \-0 0 : 出力の先頭行に変数名の並びなどを出力しない。
\&  \-1 : 個数を出力しない。出現したキー文字列のみ出力。
\&  \-2 0 : 最後の二次情報を出力しない。
\&
\& [派生のオプション]
\&   \-i str ; 入力区切り文字
\&   \-x N,M ; Nはカラムの切断位置(左から何番目の区切りで切るか), Mは残った文字列を何通り取り出すか。Mが未指定なら12。
\&   \-: 文字列の出現行の位置の範囲を出力するようにする。
.Ve
.PP
その他: 
  * freqfreq のような、頻度の頻度を出力するオプションを作りたい。オプションは \-F で表したい。
  * Ctrl+Cの挙動を文書化したい。
  * \-1 で動作ミスがある疑いがあったが、\-100(\-1 \-0 0)とオプションを与えると解消した。
  * \-x で、右側文字列のランキングについて、十分なオプションを設計する必要がある。
  * \-x で [..]xN の書式の出力の仕方について、もっと柔軟にしたい。
.SH "POD ERRORS"
.IX Header "POD ERRORS"
Hey! \fBThe above document had some coding errors, which are explained below:\fR
.IP "Around line 178:" 4
.IX Item "Around line 178:"
Invalid =encoding syntax: \s-1ALREADYDONE\s0 =head1
