.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.16)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\" ========================================================================
.\"
.IX Title "EXPSKIP 1"
.TH EXPSKIP 1 "2021-05-25" "perl v5.14.4" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH ""
.IX Header ""
.Vb 1
\& $0 [\-z] [\-A 0] [\-B 0] [\-1289] [\-f 1] [\-n 3]  
\&
\&   大きなテキストファイルの全体を把握しやすいように、
\&   途中の適当な数の行数の位置、及び最後の数行を表示する。
\&
\&   途中は 10, 20, 50 , 100, 200, 500 , 1000 .. 行目など切りの良い数字の行数で表示をする。
\&   その途中の行番号については、開始行を \-f num のように指定することが出来る。
.Ve
.PP
オプション: 
   \-b num : 10倍ごと、という指定を変更する。たとえば、2や3、1.5などを指定できる。
   \-e num : 最初と最後のそれぞれ何行を必ず出力するか。デフォルトでは3 。0 も指定可能。(Edge)
   \-f num : 開始行の指定
   \-g : 行番号が緑色で出力される。
   \-q : 行番号無しで出力する。( \-q が無いと、行番号が : の列の前に出力される。)
   \-z ; 入力は、gzip 形式と仮定する。
   \-B num きりの良い数の何行前から表示するか。連続表示に用いる。
   \-A num きりの良い数の何行後まで表示するか。連続表示に用いる。
.PP
.Vb 6
\&   \-p 0 : キリの良い数では出力しない。単に、3行もしくは、\-n で指定された行数を、最初と最後のみ出力。
\&   \-p 1 : キリの良い数を、1, 10, 100 ,1000 .. 行に限定する。
\&   \-p 2 : キリの良い数を 1, 2, 4, 8, 10, 20, 40, 80... とする。
\&   \-p 7 : キリの良い数を 1, 1.5 , 2, 3, 5 , 7 ... の1倍、10倍、100倍.. とする。
\&   \-p 8 : キリの良い数を 1, 1.5 , 2, 3, 5 , 8 ... の1倍、10倍、100倍.. とする。
\&   \-p 9 : キリの良い数を 上1桁以外が全て0の数と見なす。
\&
\&   \-E ; 入力を標準出力にそのまま通過させつつ、通常の機能で出力させるものは、標準エラー出力に出す。時に便利機能。
\&   \-t ; 出力時の時刻情報を 行頭に付加。
\&
\&  \-\-help : この $0 のヘルプメッセージを出す。  perldoc \-t $0 | cat でもほぼ同じ。
\&  \-\-help opt : オプションのみのヘルプを出す。opt以外でも options と先頭が1文字以上一致すれば良い。
\&
\& 開発上のメモ: 
\&   * キーボードからの入力待ちの場合は、\-tで検出して、ALRMシグナルで受付を促すようにしたい。
.Ve
